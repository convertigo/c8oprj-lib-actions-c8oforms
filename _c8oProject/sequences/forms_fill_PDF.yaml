comment: |
  '{
      "en": {
          "displayName": "<p>Fill out a PDF document</p>",
          "comment"    : "Fills out a PDF form from the form responses using a template PDF file."
      },
      "fr": {
          "displayName": "<p>Remplir un document PDF</p>",
          "comment"    : "Remplit un formulaire PDF à partir des réponses du formulaire à l''aide d''un fichier PDF modèle. "
      },
      "es": {
          "displayName": "<p>Completa un documento PDF</p>",
          "comment"    : "Completa un formulario PDF a partir de las respuestas del formulario utilizando un archivo PDF de plantilla."
      },
      "it": {
          "displayName": "<p>Compila un documento PDF</p>",
          "comment"    : "Compila un modulo PDF dalle risposte del modulo utilizzando un file PDF modello."
      }
  }'
↓Input_variables [steps.InputVariablesStep-1615311582853]: 
↓Iterator [steps.IteratorStep-1615311582856]: 
  sourceDefinition: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - java.lang.String: 
          - ↑value: 1615311582853
        - java.lang.String: 
          - ↑value: ./doc
  ↓SequenceSaveCurrentItem [steps.SimpleStep-1615453550403]: 
    expression: var currentItem = item;
  ↓fields [steps.XMLComplexStep-1615311582859]: 
    nodeName: fields
  ↓jSource [steps.SourceStep-1615311582862]: 
    sourceDefinition: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
        - com.twinsoft.convertigo.beans.common.XMLVector: 
          - java.lang.String: 
            - ↑value: 1615311582859
          - java.lang.String: 
            - ↑value: .
    variableName: nl
  ↓Iterator [steps.IteratorStep-1615311582865]: 
    sourceDefinition: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
        - com.twinsoft.convertigo.beans.common.XMLVector: 
          - java.lang.String: 
            - ↑value: 1615311582856
          - java.lang.String: 
            - ↑value: ./resp/*
    ↓computeFields [steps.SimpleStep-1615311582868]: 
      expression: |
        'var xPath = context.getXpathApi();
        
        var name = item.getNodeName();
        
        var xLabel = xPath.selectSingleNode(item, "./label");
        var internalLabel = xLabel != null ? ''''+xLabel.getTextContent() : "";
        
        var xLabelHtml = xPath.selectSingleNode(item, "./labelHtml");
        var internalLabelHtml = xLabelHtml != null ? ''''+xLabelHtml.getTextContent() : "";
        
        var xName = xPath.selectSingleNode(item, "./name");
        var internalName = xName != null ? ''''+xName.getTextContent() : "";
        
        var xType = xPath.selectSingleNode(item, "./type");
        var internalType = xType != null ? ''''+xType.getTextContent() : "";
        
        var internalValue = "";
        
        switch (internalType) {
        	case ''checkbox'':
        		var xItems = xPath.selectNodeIterator(item, "./children/item");
        		var i = 0;
        		while((xItem=xItems.nextNode()) != null){
        			i++;
        			var xSelected = xPath.selectSingleNode(xItem, "./selected");
        			if(xSelected != null){
        				if((''''+xSelected.getTextContent()) == "true"){
        					context.addTextNode(nl.item(0), internalName + "_" + i, "On");
        				}else{
        					context.addTextNode(nl.item(0), internalName + "_" + i, "Off");
        				}
        			}
        		}
        		break;
        	case ''radio'':
        		//TODO
        	default:
        		var xValue = xPath.selectSingleNode(item, "./value");
        		internalValue = xValue != null ? xValue.getTextContent() : "";
        		context.addTextNode(nl.item(0), internalName, internalValue);
        }'
  ↓generateUniquePath [steps.SimpleStep-1615397273864]: 
    expression: |
      '//imports and utils
      var  XMLUtils = use(''com.twinsoft.convertigo.engine.util.XMLUtils'');
      // Define var isWindows to detect unix like system or not
      var isWindows = org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS;
      // Define separator switch os
      var separator = isWindows ? "\\" :"/";
      // function to generate pseudo random char
      var result           = '''';
      var characters       = ''ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'';
      var charactersLength = characters.length;
      for ( var i = 0; i < 10; i++ ) {
      	result += characters.charAt(Math.floor(Math.random() * charactersLength));
      }
      
      
      // generate a path to put generated PDF
      var path = _use_attpath = com.twinsoft.convertigo.engine.Engine.theApp.databaseObjectsManager.getOriginalProjectByName("lib_Actions_C8Oforms").getDirPath() + separator+"csv"+separator  +new Date().getTime()+"_"+result;
      
      // get response docID
      var _use_docid = _id = (JSON.parse(''''+XMLUtils.XmlToJson(currentItem, true, true)))["doc"]["_id"];
      
      // get current action
      var currentAction = JSON.parse(currentAction)["item"];
      // get current action name
      var currentActionName = currentAction["name"];
      // get current action executing sequence
      //var currentSeq = Object.keys(currentAction["actions"])[0];
      
      // generate an attachment name to put generated PDF
      var _use_attname = currentActionName + ".pdf";
      // define attachment type
      var _use_attcontent_type = "application/pdf";
      
      // set a value to an action 
      var _use_json_base = {"actionsValue":{}};
      _use_json_base["actionsValue"][currentActionName] = {"value":_use_attname, "valueType": "attachment"};
      _use_json_base = "" + JSON.stringify(_use_json_base);
      log.debug("actionsValue=>"+_use_json_base);
      
      
      log.warn("has_exec");'
  ↓Fill_Form_PDF [steps.PdfFormStep-1615311582871]: 
    fieldsList: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.steps.SmartType
        - SmartType: 
          - ↑mode: SOURCE
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: 1615311582859
            - java.lang.String: 
              - ↑value: .
    filePath: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.steps.SmartType
        - SmartType: 
          - ↑mode: JS
          - →→: forms_input_pdf_path
    targetFile: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.steps.SmartType
        - SmartType: 
          - ↑mode: JS
          - →→: path
  ↓Call_Transaction [steps.TransactionStep-1615397498827]: 
    sourceTransaction: C8Oforms.c8oforms_response_fs.PutDocumentAttachmentFromFile
    ↓_use_attname [variables.StepVariable-1615397548530]: 
      description: Attachment name
    ↓_use_attpath [variables.StepVariable-1615397548532]: 
      description: Attachment path  This path is either absolute or relative to Convertigo environment. Relative paths starting with:<br/><br/>• <span class="computer">./</span> are relative to Convertigo workspace,<br/>• <span class="computer">.//</span> are relative to current project folder. <br/><br/>
    ↓_use_docid [variables.StepVariable-1615397548534]: 
      description: Document ID
    ↓_use_attcontent_type [variables.StepVariable-1615397548536]: 
      description: Attachment ContentType  Define the ContentType of the attachment. This is the ContentType returned when the attachment is requested.
  ↓Delete_file [steps.DeleteStep-1615397419746]: 
    sourcePath: path
  ↓Call_Transaction2 [steps.TransactionStep-1615465301061]: 
    sourceTransaction: C8Oforms.c8oforms_response_fs.PostDocumentJBASE
    ↓_use_json_base [variables.StepVariable-1615465485624]: 
      description: (string) – JSON use as a base for the document (js object). Optional
    ↓_id [variables.StepVariable-1615465485626]: 
      description: Document id
↓originalDoc [variables.RequestableMultiValuedVariable-1615311582880]: 
↓doc [variables.RequestableMultiValuedVariable-1615311582883]: 
↓forms_input_pdf_path [variables.RequestableVariable-1615311582886]: 
  comment: |
    '{
        "en": {
            "displayName": "<p>PDF template file</p>",
            "comment"    : "Fill in the dynamic PDF file you want to use as a template.<br/>You can use a tool such as <a href=''https://www.pdfescape.com/open/'' target=''_blank''>PDFescape</a> to make your PDF dynamic.<br/>You will be asked to create a new PDF or use an existing one.<br/>In PDF, the fields name must be identical to your form fields technical identifiers."
        },
        "fr": {
            "displayName": "<p>Fichier PDF modèle</p>",
            "comment"    : "Renseignez le fichier PDF que vous voulez utiliser comme modèle.<br>Vous pouvez utiliser par exemple <a href=''https://www.pdfescape.com/open/'' target=''_blank''>PDFescape</a> pour rendre votre PDF dynamique.<br/>Vous pouvez soit partir d''un nouveau PDF soit d''un existant.<br/>Le nom des champs du PDF doit être identique aux identifiants des champs de votre formulaire."
        },
        "es": {
            "displayName": "<p>Archivo de plantilla PDF</p>",
            "comment"    : "Rellene el archivo PDF que desea utilizar como plantilla.<br>Puede utilizar, por ejemplo, <a href=''https://www.pdfescape.com/open/'' target=''_blank''>PDFescape</a> para que su PDF sea dinámico.<br/>Puede partir de un nuevo PDF o de uno ya existente.<br/>Los nombres de los campos del PDF deben ser idénticos a los ID de los campos de su formulario."
        },
        "it": {
            "displayName": "<p>File modello PDF</p>",
            "comment"    : "Compila il file PDF che vuoi usare come modello.<br>Puoi usare per esempio <a href=''https://www.pdfescape.com/open/'' target=''_blank''>PDFescape</a> per rendere il tuo PDF dinamico.<br/>Puoi partire da un nuovo PDF o da uno esistente.<br/>I nomi dei campi nel PDF devono essere identici agli ID dei campi del tuo modulo."
        }
    }'
  description: file
  value: 