comment: |
  '{
      "en": {
          "displayName": "<p>Notify response by email</p>",
          "comment": "<div>Sends a <b>mail</b> when a new response is submitted</div>"
      },
      "fr": {
          "displayName": "<p>Notifier la réponse par e-mail</p>",
          "comment": "<div>Envoie un <b>e-mail</b> lorsqu''une nouvelle réponse est soumise</div>"
      },
      "es": {
          "displayName": "<p>Notificar la respuesta por correo electrónico</p>",
          "comment": "<div>Envía un <b>correo</b> cuando se envía una nueva respuesta</div>"
      },
      "it": {
          "displayName": "<p>Notifica la risposta tramite e-mail</p>",
          "comment": "<div>Invia una <b>mail</b> quando viene inviata una nuova risposta</div>"
      }
  }'
↓Input_variables [steps.InputVariablesStep-1599570999604]: 
↓computeEmails [steps.SimpleStep-1599570999655]: 
  expression: |
    'var jEmailRecipients = "";
    
    // Mail address from AD user on authenticated form response
    if(typeof(forms_mail_ADsender) != "undefined" && forms_mail_ADsender != ""){
    	jEmailRecipients += "TO:" + forms_mail_ADsender + ";";
    }
    
    // Mail address of the form creator
    if(typeof(forms_mail_owner) != "undefined" && forms_mail_owner != ""){
    	jEmailRecipients += "BCC:" + forms_mail_owner + ";";
    }
    
    
    // Mail addresses separated by comma or semicolon. Add prefix "TO:"
    if(forms_mail_recipients_to && forms_mail_recipients_to != ""){
    	var tos = forms_mail_recipients_to.split(/,|;/);
    	for(var i=0; i < tos.length; i++){
    		jEmailRecipients += "TO:" + tos[i] + ";";
    	}
    }
    
    try{
    	//Mail addresses separated by comma or semicolon. Add prefix "CC:"
    	if(forms_mail_recipients_cc != undefined && forms_mail_recipients_cc != ""){
    		var ccs = forms_mail_recipients_cc.split(/,|;/);
    		for(var i=0; i < ccs.length; i++){
    			jEmailRecipients += "CC:" + ccs[i] + ";";
    		}
    	}
    }
    catch(e){
    	
    }
    
    try{
    	//Mail addresses separated by comma or semicolon. Add prefix "BCC:"
    	if(forms_mail_recipients_bcc != undefined && forms_mail_recipients_bcc != ""){
    		var bccs = forms_mail_recipients_bcc.split(/,|;/);
    		for(var i=0; i < bccs.length; i++){
    			jEmailRecipients += "BCC:" + bccs[i] + ";";
    		}
    	}
    }
    catch(e){
    	
    }
    
    
    log.debug(">>>" + jEmailRecipients);'
↓Element [steps.XMLElementStep-1599570999664]: 
  nodeName: emailBodyPrefix
  sourceDefinition: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - java.lang.String: 
          - ↑value: 1599570999604
        - java.lang.String: 
          - ↑value: ./forms_mail_body/text()
↓Element1 [steps.XMLElementStep-1599570999667]: 
  nodeName: emailBodyTitle
  sourceDefinition: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - java.lang.String: 
          - ↑value: 1599570999604
        - java.lang.String: 
          - ↑value: ./forms_mail_body_title/text()
↓obj1 [steps.XMLElementStep-1599570999670]: 
  nodeName: formName
  sourceDefinition: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - java.lang.String: 
          - ↑value: 1599570999604
        - java.lang.String: 
          - ↑value: ./originalDoc/name/text()
↓jIfThenElse [steps.IfThenElseStep-1615475909767]: 
  condition: forms_mail_subject == undefined || forms_mail_subject == ''
  ↓jThen [steps.ThenStep-1615475909769]: 
    ↓Concat [steps.XMLConcatStep-1599570999673]: 
      nodeName: emailSubject
      sourcesDefinition: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
              - com.twinsoft.convertigo.beans.common.XMLVector: 
                - java.lang.String: 
                  - ↑value: C8O FORMS
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
                  - com.twinsoft.convertigo.beans.common.XMLVector: 
                - java.lang.String: 
                  - ↑value: '[CONVERTIGO FORMS BUILDER]'
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
              - com.twinsoft.convertigo.beans.common.XMLVector: 
                - java.lang.String: 
                  - ↑value: subject
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
                  - com.twinsoft.convertigo.beans.common.XMLVector: 
                    - java.lang.String: 
                      - ↑value: 1599570999604
                    - java.lang.String: 
                      - ↑value: ./forms_mail_subject/text()
                - java.lang.String: 
                  - ↑value: ''
    ↓Element2 [steps.XMLElementStep-1599570999676]: 
      nodeName: emailLogo
      sourceDefinition: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: 1599570999604
            - java.lang.String: 
              - ↑value: ./forms_mail_logo/text()
    ↓jSimpleSource11 [steps.SimpleSourceStep-1599570999679]: 
      sourceDefinition: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: 1599570999673
            - java.lang.String: 
              - ↑value: ./text()
      variableName: jEmailSubject
  ↓jElse [steps.ElseStep-1615475909771]: 
    ↓jSimpleSource [steps.SimpleSourceStep-1615475963687]: 
      sourceDefinition: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: 1599570999604
            - java.lang.String: 
              - ↑value: ./forms_mail_subject/text()
      variableName: jEmailSubject
↓jSimpleSource2 [steps.SimpleSourceStep-1599570999682]: 
  comment: Form name
  sourceDefinition: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - java.lang.String: 
          - ↑value: 1599570999604
        - java.lang.String: 
          - ↑value: ./originalDoc/name/text()
  variableName: jName
↓jSimpleSource111 [steps.SimpleSourceStep-1599570999685]: 
  comment: Response version
  sourceDefinition: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - java.lang.String: 
          - ↑value: 1599570999604
        - java.lang.String: 
          - ↑value: ./doc/version/text()
  variableName: jVersion
↓jSimpleSource112 [steps.SimpleSourceStep-1599570999688]: 
  comment: Response id
  sourceDefinition: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - java.lang.String: 
          - ↑value: 1599570999604
        - java.lang.String: 
          - ↑value: ./doc/_id/text()
  variableName: jId
↓FlatenizeDoc [steps.SimpleStep-1599570999691]: 
  expression: |
    '//function flatenize
    var flatenize = function (doc, prefix, resp, myid){
          for (var property in doc) {
            if(doc[property].type != undefined){
              if(doc[property].type == "ion-card"){
                flatenize(doc[property]["children"], doc[property]["name"]+"_", resp, myid);
              }
              else if(doc[property].type == "radio_group"){
                  for(var ninos in doc[property].children){
                    resp.push({"key":property+"_" + ninos, "value": doc[property].children[ninos], "type": doc[property].type})
                  }
              }
              else{
                if(doc[property].type == "checkbox"){
                    var val ="";
                    for (var child in doc[property].children) {
                        if(doc[property].children[child].selected){
                            if(val == ""){
                                val = doc[property].children[child].value + "";
                            }
                            else{
                                val = val + "," + doc[property].children[child].value;
                            }
                          
                      }
                  }
                  resp.push({"key":prefix + doc[property]["name"], "value": val, "type": doc[property].type});
                }
                else if(doc[property].type == "checkbox_group"){
                  // foreach Line
                  for(var ninos in doc[property].children){
                    var val = "";
                    // foreach Column
                    for (var child in doc[property].children[ninos]) {
                        if(doc[property].children[ninos][child].selected){
                          if(val === ""){
                            val = doc[property].children[ninos][child].value;
                          }
                          else{
                            val = val + "," + doc[property].children[ninos][child].value;
                          } 
                        }
                    }
                    resp.push({"key":prefix + property+"_" + ninos, "value": val, "type": doc[property].type});
                  }
                }
                /*else if(doc[property].type == "img"){
                    if(doc[property].value != ""){
                        resp.push({"key":prefix + doc[property]["name"], "value": "__C8O__UNIQUE__IMG,"+myid, "type": doc[property].type})  
                    }
                    else{
                       resp.push({"key":prefix + doc[property]["name"], "value": doc[property]["value"], "type": doc[property].type})
                    }
                  }*/
                  else if(doc[property].type == "signature"){
                    if(doc[property].value != ""){
                      resp.push({"key":prefix + doc[property]["name"], "value": doc[property].value, "type": doc[property].type})
                    }
                    else{
                       resp.push({"key":prefix + doc[property]["name"], "value": doc[property]["value"], "type": doc[property].type})
                    }
                  }
                  else if(doc[property].type == "file"){
                    if(doc[property].value != ""){
                      var str = "";
                      for(var elem in doc[property]["value"]){
                        str == "" ? str = doc[property]["value"][elem] : str += "," + doc[property]["value"][elem];
                      }
                      resp.push({"key":prefix + doc[property]["name"], "value": str, "type": doc[property].type})
                    } 
                    else{
                       resp.push({"key":prefix + doc[property]["name"], "value": doc[property]["value"], "type": doc[property].type})
                    }
                  }
                else{
                 resp.push({"key":prefix + doc[property]["name"], "value": doc[property]["value"], "type": doc[property].type}) 
                }
              }
            }
          }
    };
    
    var writeFile = function(filep, filen, arr){
    	var csvWriter = new java.io.PrintWriter(new java.io.BufferedWriter(new java.io.FileWriter(filep + filen, true)));
    	try {
    		titles = "";
    		values = "";
    		for(var i = 0; i < arr.length; i++){
    			titles+=arr[i]["key"] + ((i < arr.length-1)?";":"");
    		}
    		for(var i = 0; i < arr.length; i++){
    			values+=arr[i]["value"] + ((i < arr.length-1)?";":"");
    		}
    		csvWriter.println(titles);
    		csvWriter.println(values);
    		csvWriter.close();
    	}
    	catch(e){
    		csvWriter.close();
    		log.warning(e + "");
    	}
    }
    
    var jDoc = JSON.parse(''''+com.twinsoft.convertigo.engine.util.XMLUtils.XmlToJson(doc, true, true));
    log.debug(JSON.stringify(jDoc));
    
    var date = jDoc.variable.timestamp;
    var resp = [{"key":"horodateur", "value":date, "type": "text"}, {"key":"name", "value":jName, "type": "text"}, {"key":"version", "value":jVersion, "type": "integer"}];
    flatenize(jDoc.variable.resp, "", resp, jDoc.variable._id);
    log.debug(JSON.stringify(resp));
    var filepath = context.getProjectDirectory()+ "/csv/";
    var attachPath = context.getProjectDirectory()+ "/att/";
    var attach2Path = context.getProjectDirectory()+ "/attach/";
    
    
    var jName = java.lang.String(jId);
    var digest  = java.security.MessageDigest.getInstance("SHA-256");
    var encodedhash = digest.digest(jName.getBytes(java.nio.charset.StandardCharsets.UTF_8));
    var filename = encodedhash +".csv";
    writeFile(filepath, filename, resp);
    
    var signatures = [];
    var attachmentsArray = [];
    
    var table_recap = "<table><thead><tr><td><p class=''under''>Date</p></td><td><p>" +new Date(+resp["0"]["value"])+"</p></td></tr>";
    table_recap += "<tr><td><p class=''under''>"+resp["1"]["key"]+"</p></td><td><p>" + resp["1"]["value"]+"</p></td></tr>";
    table_recap += "<tr><td><p class=''under''>"+resp["2"]["key"]+"</p></td><td><p>" + resp["2"]["value"]+"</p></td></tr></thead>";
    table_recap += "<tbody>"
    for(var elem in resp){
    	if(+elem > 2){
    		if(resp[elem]["type"] == "signature"){
    			signatures.push({name:resp[elem]["key"]+".png", "value": (resp[elem]["value"]).substring(22)});
    			table_recap += "<tr><td><p class=''under''>"+resp[elem]["key"]+"</p></td><td><p>" + resp[elem]["key"]+".png</p></td></tr>";
    		}
    		else if(resp[elem]["type"] == "img"){
    			signatures.push({name:resp[elem]["key"]+".jpg", "value": (resp[elem]["value"])});
    			table_recap += "<tr><td><p class=''under''>"+resp[elem]["key"]+"</p></td><td><p>" + resp[elem]["key"]+".png</p></td></tr>";
    		}
    		else if(resp[elem]["type"] == "file"){
    			var idx1 = resp[elem]["value"].indexOf("_C80C80_");
    			var idx2 = resp[elem]["value"].indexOf("_C80C80_", idx1 + 1);
    			var name = resp[elem]["value"].substring(idx1+8, idx2);
    			attachmentsArray.push({name:name, "value": (resp[elem]["value"])});
    			table_recap += "<tr><td><p class=''under''>"+resp[elem]["key"]+"</p></td><td><p>" + name+"</p></td></tr>";
    		}
    		else{
    			table_recap += "<tr><td><p class=''under''>"+resp[elem]["key"]+"</p></td><td><p>" + resp[elem]["value"]+"</p></td></tr>";
    		}
    		
    	}
    }
    for(var elem in jDoc.variable.actionsValue){
    	table_recap += "<tr><td><p class=''under''>"+elem+"</p></td><td><p>" + jDoc.variable.actionsValue[elem]["value"]+"</p></td></tr>";
    	if(jDoc.variable.actionsValue[elem]["valueType"] == "attachment"){
    		attachmentsArray.push({name: ""+jDoc.variable.actionsValue[elem]["value"], "value": (""+jDoc.variable.actionsValue[elem]["value"])});
    	}
    }
    table_recap += "</tbody></table>";
    
    '
↓jIterator [steps.SimpleIteratorStep-1599656293391]: 
  expression: signatures
  ↓jElement [steps.ElementStep-1599656460191]: 
    expression: item.value
  ↓Write_binary_from_Base64 [steps.WriteBase64Step-1599578642292]: 
    dataFile: attachPath + item.name
    sourceDefinition: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
        - com.twinsoft.convertigo.beans.common.XMLVector: 
          - java.lang.String: 
            - ↑value: 1599656460191
          - java.lang.String: 
            - ↑value: ./text()
↓jIterator1 [steps.SimpleIteratorStep-1599746917421]: 
  expression: attachmentsArray
  ↓jElement [steps.ElementStep-1599746917424]: 
    expression: item.value
  ↓jElement1 [steps.ElementStep-1599752298863]: 
    expression: attachPath + item.value
  ↓Call_Transaction [steps.TransactionStep-1599746937829]: 
    output: true
    sourceTransaction: C8Oforms.c8oforms_response_fs.GetDocumentAttachment
    ↓_use_attname [variables.StepVariable-1599747042658]: 
      description: Attachment name
      sourceDefinition: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: 1599746917424
            - java.lang.String: 
              - ↑value: ./text()
    ↓_use_docid [variables.StepVariable-1599747042660]: 
      description: Document ID
      sourceDefinition: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: 1599570999604
            - java.lang.String: 
              - ↑value: ./doc/_id/text()
    ↓_use_attpath [variables.StepVariable-1599747042662]: 
      description: Attachment path  This path is either absolute or relative to Convertigo environment. Relative paths starting with:<br/><br/>• <span class="computer">./</span> are relative to Convertigo workspace,<br/>• <span class="computer">.//</span> are relative to current project folder. <br/><br/>
      sourceDefinition: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: 1599752298863
            - java.lang.String: 
              - ↑value: ./text()
      value: 
↓jElement [steps.ElementStep-1599572673725]: 
  expression: table_recap
  nodeName: tableBody
↓setAttachmentsManually [steps.SimpleStep-1599656012175]: 
  expression: |
    '// Define dynamically attachments
    
    	var parent = context.requestedObject.currentStep.getParent();
    	var smtpStep = parent.getDatabaseObjectChild("SMTP_send").getOriginal();
    
    	var attachments = new com.twinsoft.convertigo.beans.common.XMLVector();
    
    	for(var att in signatures){
    		var attachment = new com.twinsoft.convertigo.beans.common.XMLVector();
    		var fPathName = ''"''+attachPath + signatures[att].name+''"'';
    		fPathName = fPathName.replace(/(\\)/g, ''$1$1'');
    		log.warning(fPathName);
    		attachment.add(fPathName);//filepath+name
    		attachment.add(''"''+signatures[att].name+''"'');//name
    		attachments.add(attachment);
    		log.warning("for att in " + attachPath + signatures[att].name)
    	}
    	log.warning(JSON.stringify(attachmentsArray))
    	for(var att in attachmentsArray){
    		var attachment = new com.twinsoft.convertigo.beans.common.XMLVector();
    		var fPathName = ''"''+attachPath + attachmentsArray[att].value +''"'';
    		log.warning(fPathName);
    		fPathName = fPathName.replace(/(\\)/g, ''$1$1'');
    		log.warning(fPathName);
    		attachment.add(fPathName);//filepath+name
    		attachment.add(''"''+attachmentsArray[att].name+''"'');//name
    		attachments.add(attachment);
    		log.warning("for att in " + attach2Path + attachmentsArray[att].name);
    	}
    	smtpStep.setAttachments(attachments);
    
    
    //C:\dev\eclipse_software\eclipse-committers-2019-06-R-win32-x86_64\eclipse\devconvertigo_workspacesworkspace1lib_Actions_C8Oforms\att\signature1.png
    //C:\dev\convertigo_workspaces\workspace1\lib_Actions_C8Oforms/att/signature1.png
    
    
    /**
    var smtpStep = new com.twinsoft.convertigo.beans.steps.SmtpStep();
    
    var attachments = new com.twinsoft.convertigo.beans.common.XMLVector();
    
    for(var att in signatures){
    	var attachment = new com.twinsoft.convertigo.beans.common.XMLVector();
    	attachment.add(attachPath + signatures[att].name);//filepath+name
    	attachment.add(signatures[att].name);//name
    	attachments.add(attachment);
    	log.warning("for att in " + attachPath + signatures[att].name)
    }
    // set attachment property to step smtp
    smtpStep.setAttachments(attachments);
    
    //set SmtpRecipients property to step smtp
    smtpStep.setSmtpRecipients(jEmailRecipients);
    
    //set SmtpServer property to step smtp
    smtpStep.setSmtpServer(smtpServer);
    
    //set SmtpSubject property to step smtp
    smtpStep.setSmtpSubject(jEmailSubject);
    
    //set XslFilepath property to step smtp
    smtpStep.setXslFilepath(".//emails/responseMail2.xsl");
    
    //set SmtpAuthType property to step smtp
    var getSmtpAuthType = (val) => {
    	switch(val){
    		case "None":
    				return com.twinsoft.convertigo.beans.steps.SmtpStep.SmtpAuthType.none;
    			break;
    		case "Basic":
    				return com.twinsoft.convertigo.beans.steps.SmtpStep.SmtpAuthType.basic;
    			break;
    		case "STARTTLS":
    				return com.twinsoft.convertigo.beans.steps.SmtpStep.SmtpAuthType.startTls;
    			break;
    		case "SSL/TLS":
    				return com.twinsoft.convertigo.beans.steps.SmtpStep.SmtpAuthType.sslTls;
    			break;
    	}
    };
    smtpStep.setSmtpAuthType(getSmtpAuthType(authenticationType));
    
    //set SmtpSender property to step smtp
    smtpStep.setSmtpSender(senderEmailAdress);
    
    //set SmtpPassword property to step smtp
    smtpStep.setSmtpPassword(smtpPassword);
    
    //set SmtpPort property to step smtp
    smtpStep.setSmtpPort(smtpPort);
    
    //set SmtpUsername property to step smtp
    smtpStep.setSmtpUsername(smtpUser);
    
    // run step;
    smtpStep.execute(context.requestedObject.runningThread.javascriptContext, context.requestedObject.scope);
    **/'
  output: true
↓SMTP_send [steps.SmtpStep-1599570999694]: 
  attachments: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: '"C:\\dev\\convertigo_workspaces\\workspace790\\.metadata\\.plugins\\com.twinsoft.convertigo.studio\\git\\c8oprj-lib-actions-c8oforms_1.0.7/att/submit1.pdf"'
            - java.lang.String: 
              - ↑value: '"submit1.pdf"'
  smtpAuthType: ${lib.actions.c8oforms.smtp.security}
  smtpPassword: x731c565d55a2a2e3f9747ad43539421ba369803d925e5f657302a8f9b0af91173177899c6a22f114f50b0b9bb5e982af
  smtpPort: ${lib.actions.c8oforms.smtp.port}
  smtpRecipients: jEmailRecipients
  smtpSender: '"${lib.actions.c8oforms.smtp.sender}"'
  smtpServer: ${lib.actions.c8oforms.smtp.server}
  smtpSubject: jEmailSubject
  smtpUsername: ${lib.actions.c8oforms.smtp.user}
  xslFilepath: '".//emails/responseMail2.xsl"'
↓wait [steps.SimpleStep-1599570999697]: 
  expression: java.lang.Thread.sleep(10000);
↓IfFileExists [steps.IfFileExistStep-1599570999700]: 
  condition: filepath+filename
  ↓Delete_file [steps.DeleteStep-1599570999703]: 
    sourcePath: filepath+filename
↓jIterator2 [steps.SimpleIteratorStep-1601045465743]: 
  expression: signatures
  ↓Sequence_JS [steps.SimpleStep-1601045505349]: 
    expression: |
      //todo
      
      var fPathName = attachPath + item.name;
      fPathName = fPathName.replace(/(\\)/g, '$1$1');
  ↓IfFileExists [steps.IfFileExistStep-1601045488334]: 
    condition: fPathName
    ↓Delete_file [steps.DeleteStep-1601045488337]: 
      sourcePath: fPathName
↓jIterator21 [steps.SimpleIteratorStep-1601045586850]: 
  expression: attachmentsArray
  ↓Sequence_JS [steps.SimpleStep-1601045586853]: 
    expression: |
      //todo
      
      var fPathName = attach2Path + item.value;
      fPathName = fPathName.replace(/(\\)/g, '$1$1');
  ↓IfFileExists [steps.IfFileExistStep-1601045586856]: 
    condition: fPathName
    ↓Delete_file [steps.DeleteStep-1601045586859]: 
      sourcePath: fPathName
↓forms_mail_recipients_to [variables.RequestableVariable-1599570999706]: 
  comment: |
    '{
      "en":{
    	"displayName":"<p>To</p>",
           "comment":"<div>Mail recipients separated by comma or semicolon. <i>(mandatory)</i></div>"
        },
        "fr":{
            "displayName":"<p>À</p>",
            "comment":"<div>Destinataires du courrier séparés par une virgule ou un point-virgule. <i>(obligatoire)</i></div>"
        },
        "es":{
            "displayName":"<p>A</p>",
            "comment":"<div>Destinatarios de correo separados por coma o punto y coma. <i>(obligatorio)</i></div>"
        },
        "it":{
            "displayName":"<p>A</p>",
            "comment":"<div>Destinatari di posta separati da virgola o punto e virgola. <i>(obbligatorio)</i></div>"
        }
    }'
  value: 
↓forms_mail_recipients_cc [variables.RequestableVariable-1615469168917]: 
  comment: |
    '{
        "en":{
          "displayName":"<p>Cc</p>",
             "comment":"<div>Mail <b>copy</b> recipients separated by comma or semicolon. <i>(mandatory)</i></div>"
          },
          "fr":{
              "displayName":"<p>Cc</p>",
              "comment":"<div>Destinataires <b>en copie</b> du courrier séparés par une virgule ou un point-virgule. <i>(obligatoire)</i></div>"
          },
          "es":{
              "displayName":"<p>Cc</p>",
              "comment":"<div>Destinatarios <b>en copia<b/> de correo separados por coma o punto y coma. <i>(obligatorio)</i></div>"
          },
          "it":{
              "displayName":"<p>Cc</p>",
              "comment":"<div>Destinatari <b>della copia</b> di posta separati da virgola o punto e virgola. <i>(obbligatorio)</i></div>"
          }
      }'
  value: 
↓forms_mail_recipients_bcc [variables.RequestableVariable-1615469168920]: 
  comment: |
    '{
        "en":{
          "displayName":"<p>Bcc</p>",
             "comment":"<div>Mail <b>blind</b> recipients separated by comma or semicolon. <i>(mandatory)</i></div>"
          },
          "fr":{
              "displayName":"<p>Bcc</p>",
              "comment":"<div>Destinataires <b>en copie cachée</b> du courrier séparés par une virgule ou un point-virgule. <i>(obligatoire)</i></div>"
          },
          "es":{
              "displayName":"<p>Bcc</p>",
              "comment":"<div>Destinatarios <b>ciegos<b/> de correo separados por coma o punto y coma. <i>(obligatorio)</i></div>"
          },
          "it":{
              "displayName":"<p>Bcc</p>",
              "comment":"<div>Destinatari <b>ciechi</b> di posta separati da virgola o punto e virgola. <i>(obbligatorio)</i></div>"
          }
      }'
  value: 
↓forms_mail_subject [variables.RequestableVariable-1615473057323]: 
  comment: |
    '{
        "en":{
          "displayName":"<p>Email subject</p>",
             "comment":"<div>Email subject</div>"
          },
          "fr":{
              "displayName":"<p>Objet de l''email</p>",
              "comment":"<div>Objet de l''email</div>"
          },
          "es":{
              "displayName":"<p>Asunto del correo electrónico</p>",
              "comment":"<div>Asunto del correo electrónico</div>"
          },
          "it":{
              "displayName":"<p>ggetto dell''email</p>",
              "comment":"<div>ggetto dell''email</div>"
          }
      }'
  value: 
↓forms_mail_body [variables.RequestableVariable-1599570999724]: 
  comment: |
    '{
      "en":{
    	"displayName":"<p>Email body</p>",
        "comment":"<div>Email body, the message you want to send to recipients. <i>(optional)</i></div>"
        },
        "fr":{
            "displayName":"<p>Corps de l''e-mail</p>",
            "comment":"<div>Corps de l''e-mail, le message que vous voulez envoyer aux destinataires. <i>(optionnel)</i></div>"
        },
        "es":{
            "displayName":"<p>Cuerpo del correo</p>",
            "comment":"<div>Cuerpo del correo electrónico, el mensaje que desea enviar a los destinatarios. <i>(opcional)</i></div>"
        },
        "it":{
            "displayName":"<p>Corpo dell''email</p>",
            "comment":"<div>Corpo dell''e-mail, il messaggio che si desidera inviare ai destinatari. <i>(facoltativo)</div>"
        }
    }'
  description: html
  value: Nouvelle réponse dans votre formulaire :
↓doc [variables.RequestableVariable-1599570999736]: 
↓originalDoc [variables.RequestableVariable-1599570999739]: 